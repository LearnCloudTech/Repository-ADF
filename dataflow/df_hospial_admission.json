{
	"name": "df_hospial_admission",
	"properties": {
		"description": "Pull the data from the Data Lake Gen2, split the file into two: weekly and daily admissions, and apply other transformations.",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_df_hospital_admissions",
						"type": "DatasetReference"
					},
					"name": "HospitalAdmissions"
				},
				{
					"dataset": {
						"referenceName": "ds_df_country_lookup",
						"type": "DatasetReference"
					},
					"name": "CountryLookup"
				},
				{
					"dataset": {
						"referenceName": "ds_df_dimDate",
						"type": "DatasetReference"
					},
					"name": "DimDate"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_df_hopital_admissions_processed",
						"type": "DatasetReference"
					},
					"name": "Export2ADLS"
				}
			],
			"transformations": [
				{
					"name": "UpdateReqColumns"
				},
				{
					"name": "MatchCountryCodes"
				},
				{
					"name": "SplitDailyWeekly"
				},
				{
					"name": "IcuHospitalCount"
				},
				{
					"name": "ArangeColumns"
				},
				{
					"name": "SortbyDate"
				},
				{
					"name": "Aggregate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HospitalAdmissions",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> CountryLookup",
				"source(output(",
				"          date_key as string,",
				"          date as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          day_name as string,",
				"          day_of_year as string,",
				"          week_of_month as string,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as string,",
				"          year_week as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DimDate",
				"MatchCountryCodes select(mapColumn(",
				"          country = HospitalAdmissions@country,",
				"          country_code_3_digit,",
				"          country_code_2_digit,",
				"          population,",
				"          indicator,",
				"          reported_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> UpdateReqColumns",
				"HospitalAdmissions, CountryLookup lookup(HospitalAdmissions@country == CountryLookup@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> MatchCountryCodes",
				"UpdateReqColumns split(indicator=='Daily hospital occupancy'||indicator=='Daily ICU occupancy',",
				"     disjoint: false) ~> SplitDailyWeekly@(Daily, Weekly)",
				"SplitDailyWeekly@Daily pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          source),",
				"     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
				"     count = sum(value),",
				"     columnNaming: '$V_$N',",
				"     lateral: false) ~> IcuHospitalCount",
				"IcuHospitalCount select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          {hospital occupancy_count} = {Daily hospital occupancy_count},",
				"          {ICU occupancy_count} = {Daily ICU occupancy_count},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> ArangeColumns",
				"ArangeColumns sort(desc(reported_date, true)) ~> SortbyDate",
				"DimDate aggregate() ~> Aggregate",
				"SortbyDate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['hospital_admissions_processed.csv'],",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> Export2ADLS"
			]
		}
	}
}