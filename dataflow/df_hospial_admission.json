{
	"name": "df_hospial_admission",
	"properties": {
		"description": "Pull the data from the Data Lake Gen2, split the file into two: weekly and daily admissions, and apply other transformations.",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_df_hospital_admissions",
						"type": "DatasetReference"
					},
					"name": "HospitalAdmissions"
				},
				{
					"dataset": {
						"referenceName": "ds_df_country_lookup",
						"type": "DatasetReference"
					},
					"name": "CountryLookup"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "UpdateReqColumns"
				},
				{
					"name": "MatchCountryCodes"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HospitalAdmissions",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> CountryLookup",
				"MatchCountryCodes select(mapColumn(",
				"          country = HospitalAdmissions@country,",
				"          country_code_3_digit,",
				"          country_code_2_digit,",
				"          population,",
				"          indicator,",
				"          reported_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> UpdateReqColumns",
				"HospitalAdmissions, CountryLookup lookup(HospitalAdmissions@country == CountryLookup@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> MatchCountryCodes"
			]
		}
	}
}